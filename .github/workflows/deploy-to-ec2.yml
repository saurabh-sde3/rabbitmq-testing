name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      run: |
        # Create SSH key file
        echo "$EC2_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        
        # Copy Python files to EC2 home directory first
        scp -i ec2_key.pem -o StrictHostKeyChecking=no tasks.py run_task.py requirements.txt $EC2_USER@$EC2_HOST:~/
        
        # Move files and restart services on EC2
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          # Move files to application directory
          sudo cp ~/tasks.py ~/run_task.py ~/requirements.txt /opt/rabbitmq-testing/
          sudo chown $USER:$USER /opt/rabbitmq-testing/*.py /opt/rabbitmq-testing/requirements.txt
          
          cd /opt/rabbitmq-testing
          
          # Update Python dependencies
          source venv/bin/activate
          pip install -r requirements.txt
          
          # Restart Celery worker
          sudo systemctl restart celery-worker
          
          # Check status
          echo "Celery worker status: $(sudo systemctl is-active celery-worker)"
          
          # Test the deployment
          python3 -c "from tasks import add; print('âœ“ Deployment successful')"
        EOF
        
        # Clean up
        rm -f ec2_key.pem
