name: Deploy RabbitMQ Testing to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests (if any)
      run: |
        # Add your test commands here
        python -c "import celery; print('Celery import successful')"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      run: |
        # Create SSH key file
        echo "$EC2_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem
        
        # Create deployment package
        tar -czf rabbitmq-testing.tar.gz *.py requirements.txt deploy.sh
        
        # Copy files to EC2
        scp -i ec2_key.pem -o StrictHostKeyChecking=no rabbitmq-testing.tar.gz $EC2_USER@$EC2_HOST:/home/$EC2_USER/
        
        # Execute deployment script on EC2
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          # Stop existing services
          sudo systemctl stop celery-worker || true
          sudo systemctl stop celery-beat || true
          
          # Extract new code
          cd /home/$EC2_USER
          tar -xzf rabbitmq-testing.tar.gz
          
          # Run deployment script
          chmod +x deploy.sh
          ./deploy.sh
          
          # Start services
          sudo systemctl start rabbitmq-server
          sudo systemctl enable rabbitmq-server
          sudo systemctl start celery-worker
          sudo systemctl enable celery-worker
          
          # Verify deployment
          sleep 5
          python3 -c "from tasks import add; print('Deployment successful')"
        EOF
        
        # Clean up
        rm -f ec2_key.pem
